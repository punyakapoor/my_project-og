### Compute Instance(s)

module "instances-etcd-ad1" {
  source                      = "./instances/etcd"
 // count                       = "${var.etcdAd1count}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[0],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "etcd-ad1"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  hostname_label_prefix       = "etcd-ad1"
  oracle_linux_image_name     = "${var.etcd_ol_image_name}"
  label_prefix                = "${var.label_prefix}"
  shape                       = "${var.etcdShape}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.etcd_subnet_ad1_id}"
  subnet_name                 = "etcdSubnetAD1"
  tenancy_ocid                = "${var.compartment_ocid}"
  etcd_docker_max_log_size    = "${var.etcd_docker_max_log_size}"
  etcd_docker_max_log_files   = "${var.etcd_docker_max_log_files}"
  etcd_iscsi_volume_create    = "${var.etcd_iscsi_volume_create}"
  etcd_iscsi_volume_size      = "${var.etcd_iscsi_volume_size}"
  assign_private_ip           = "${var.etcd_maintain_private_ip == "true" ? "true": "false"}"
}

module "instances-etcd-ad2" {
  source                      = "./instances/etcd"
  //count                       = "${var.etcdAd2count}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[1],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "etcd-ad2"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  hostname_label_prefix       = "etcd-ad2"
  oracle_linux_image_name     = "${var.etcd_ol_image_name}"
  label_prefix                = "${var.label_prefix}"
  shape                       = "${var.etcdShape}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.etcd_subnet_ad2_id}"
  subnet_name                 = "etcdSubnetAD2"
  tenancy_ocid                = "${var.compartment_ocid}"
  etcd_docker_max_log_size    = "${var.etcd_docker_max_log_size}"
  etcd_docker_max_log_files   = "${var.etcd_docker_max_log_files}"
  etcd_iscsi_volume_create    = "${var.etcd_iscsi_volume_create}"
  etcd_iscsi_volume_size      = "${var.etcd_iscsi_volume_size}"
  assign_private_ip           = "${var.etcd_maintain_private_ip == "true" ? "true": "false"}"
}

module "instances-etcd-ad3" {
  source                      = "./instances/etcd"
 // count                       = "${var.etcdAd3count}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[2],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "etcd-ad3"
  docker_ver                  = "${var.docker_ver}"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  hostname_label_prefix       = "etcd-ad3"
  oracle_linux_image_name     = "${var.etcd_ol_image_name}"
  label_prefix                = "${var.label_prefix}"
  shape                       = "${var.etcdShape}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.etcd_subnet_ad3_id}"
  subnet_name                 = "etcdSubnetAD3"
  tenancy_ocid                = "${var.compartment_ocid}"
  etcd_docker_max_log_size    = "${var.etcd_docker_max_log_size}"
  etcd_docker_max_log_files   = "${var.etcd_docker_max_log_files}"
  etcd_iscsi_volume_create    = "${var.etcd_iscsi_volume_create}"
  etcd_iscsi_volume_size      = "${var.etcd_iscsi_volume_size}"
  assign_private_ip           = "${var.etcd_maintain_private_ip == "true" ? "true": "false"}"
}

module "instances-k8smaster-ad1" {
  source                      = "./instances/k8smaster"
 // count                       = "${var.k8sMasterAd1count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_count            = "${var.k8sMasterAd1count + var.k8sMasterAd2count + var.k8sMasterAd3count}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[0],"name")}"
  k8s_apiserver_token_admin   = "${module.k8s-tls.api_server_admin_token}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "k8s-master-ad1"
  docker_ver                  = "${var.docker_ver}"
  master_docker_max_log_size  = "${var.master_docker_max_log_size}"
  master_docker_max_log_files = "${var.master_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  flannel_ver                 = "${var.flannel_ver}"
  hostname_label_prefix       = "k8s-master-ad1"
  oracle_linux_image_name     = "${var.master_ol_image_name}"
  k8s_dashboard_ver           = "${var.k8s_dashboard_ver}"
  k8s_dns_ver                 = "${var.k8s_dns_ver}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  shape                       = "${var.k8sMasterShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.k8smaster_subnet_ad1_id}"
  subnet_name                 = "masterSubnetAD1"
  tenancy_ocid                = "${var.compartment_ocid}"
  cloud_controller_version    = "${var.cloud_controller_version}"
  cloud_controller_secret     = "${module.oci-cloud-controller.cloud-provider-json}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  flexvolume_driver_secret    = "${module.oci-flexvolume-driver.flex-volume-driver-yaml}"
  volume_provisioner_version  = "${var.volume_provisioner_version}"
  volume_provisioner_secret   = "${module.oci-volume-provisioner.volume-provisioner-yaml}"
  assign_private_ip           = "${var.master_maintain_private_ip}"
  etcd_endpoints              = "${local.etcd_endpoints}"
  flannel_backend             = "${var.flannel_backend}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
  kubernetes_network_plugin   = "${var.kubernetes_network_plugin}"
}

/*module "instances-k8smaster-ad2" {
  source                      = "./instances/k8smaster"
 // count                       = "${var.k8sMasterAd2count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_count            = "${var.k8sMasterAd1count + var.k8sMasterAd2count + var.k8sMasterAd3count}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[1],"name")}"
  k8s_apiserver_token_admin   = "${module.k8s-tls.api_server_admin_token}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "k8s-master-ad2"
  docker_ver                  = "${var.docker_ver}"
  master_docker_max_log_size  = "${var.master_docker_max_log_size}"
  master_docker_max_log_files = "${var.master_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  flannel_ver                 = "${var.flannel_ver}"
  hostname_label_prefix       = "k8s-master-ad2"
  oracle_linux_image_name     = "${var.master_ol_image_name}"
  k8s_dashboard_ver           = "${var.k8s_dashboard_ver}"
  k8s_dns_ver                 = "${var.k8s_dns_ver}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  shape                       = "${var.k8sMasterShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.k8smaster_subnet_ad2_id}"
  subnet_name                 = "masterSubnetAD2"
  tenancy_ocid                = "${var.compartment_ocid}"
  cloud_controller_version    = "${var.cloud_controller_version}"
  cloud_controller_secret     = "${module.oci-cloud-controller.cloud-provider-json}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  flexvolume_driver_secret    = "${module.oci-flexvolume-driver.flex-volume-driver-yaml}"
  volume_provisioner_version  = "${var.volume_provisioner_version}"
  volume_provisioner_secret   = "${module.oci-volume-provisioner.volume-provisioner-yaml}"
  assign_private_ip           = "${var.master_maintain_private_ip}"
  etcd_endpoints              = "${local.etcd_endpoints}"
  flannel_backend             = "${var.flannel_backend}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
  kubernetes_network_plugin   = "${var.kubernetes_network_plugin}"
}

module "instances-k8smaster-ad3" {
  source                      = "./instances/k8smaster"
 // count                       = "${var.k8sMasterAd3count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_count            = "${var.k8sMasterAd1count + var.k8sMasterAd2count + var.k8sMasterAd3count}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[2],"name")}"
  k8s_apiserver_token_admin   = "${module.k8s-tls.api_server_admin_token}"
  compartment_ocid            = "${var.compartment_ocid}"
  control_plane_subnet_access = "${var.control_plane_subnet_access}"
  display_name_prefix         = "k8s-master-ad3"
  docker_ver                  = "${var.docker_ver}"
  master_docker_max_log_size  = "${var.master_docker_max_log_size}"
  master_docker_max_log_files = "${var.master_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  etcd_discovery_url          = "${template_file.etcd_discovery_url.id}"
  etcd_ver                    = "${var.etcd_ver}"
  flannel_ver                 = "${var.flannel_ver}"
  hostname_label_prefix       = "k8s-master-ad3"
  oracle_linux_image_name     = "${var.master_ol_image_name}"
  k8s_dashboard_ver           = "${var.k8s_dashboard_ver}"
  k8s_dns_ver                 = "${var.k8s_dns_ver}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  shape                       = "${var.k8sMasterShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  network_cidrs               = "${var.network_cidrs}"
  subnet_id                   = "${module.vcn.k8smaster_subnet_ad3_id}"
  subnet_name                 = "masterSubnetAD3"
  tenancy_ocid                = "${var.compartment_ocid}"
  cloud_controller_version    = "${var.cloud_controller_version}"
  cloud_controller_secret     = "${module.oci-cloud-controller.cloud-provider-json}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  flexvolume_driver_secret    = "${module.oci-flexvolume-driver.flex-volume-driver-yaml}"
  volume_provisioner_version  = "${var.volume_provisioner_version}"
  volume_provisioner_secret   = "${module.oci-volume-provisioner.volume-provisioner-yaml}"
  assign_private_ip           = "${var.master_maintain_private_ip}"
  etcd_endpoints              = "${local.etcd_endpoints}"
  flannel_backend             = "${var.flannel_backend}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
  kubernetes_network_plugin   = "${var.kubernetes_network_plugin}"
}*/

module "instances-k8sworker-ad1" {
  source                      = "./instances/k8sworker"
 // count                       = "${var.k8sWorkerAd1count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[0],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  display_name_prefix         = "k8s-worker-ad1"
  docker_ver                  = "${var.docker_ver}"
  worker_docker_max_log_size  = "${var.worker_docker_max_log_size}"
  worker_docker_max_log_files = "${var.worker_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  hostname_label_prefix       = "k8s-worker-ad1"
  oracle_linux_image_name     = "${var.worker_ol_image_name}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  master_lb                   = "${local.master_lb_address}"
  reverse_proxy_clount_init   = "${local.reverse_proxy_clount_init}"
  reverse_proxy_setup         = "${local.reverse_proxy_setup}"
  region                      = "${var.region}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  shape                       = "${var.k8sWorkerShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  subnet_id                   = "${module.vcn.k8worker_subnet_ad1_id}"
  tenancy_ocid                = "${var.compartment_ocid}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  worker_iscsi_volume_create  = "${var.worker_iscsi_volume_create}"
  worker_iscsi_volume_size    = "${var.worker_iscsi_volume_size}"
  worker_iscsi_volume_mount   = "${var.worker_iscsi_volume_mount}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
}

/*module "instances-k8sworker-ad2" {
  source                      = "./instances/k8sworker"
 // count                       = "${var.k8sWorkerAd2count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[1],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  display_name_prefix         = "k8s-worker-ad2"
  docker_ver                  = "${var.docker_ver}"
  worker_docker_max_log_size  = "${var.worker_docker_max_log_size}"
  worker_docker_max_log_files = "${var.worker_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  hostname_label_prefix       = "k8s-worker-ad2"
  oracle_linux_image_name     = "${var.worker_ol_image_name}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  master_lb                   = "${local.master_lb_address}"
  reverse_proxy_clount_init   = "${local.reverse_proxy_clount_init}"
  reverse_proxy_setup         = "${local.reverse_proxy_setup}"
  region                      = "${var.region}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  shape                       = "${var.k8sWorkerShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  subnet_id                   = "${module.vcn.k8worker_subnet_ad2_id}"
  tenancy_ocid                = "${var.compartment_ocid}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  worker_iscsi_volume_create  = "${var.worker_iscsi_volume_create}"
  worker_iscsi_volume_size    = "${var.worker_iscsi_volume_size}"
  worker_iscsi_volume_mount   = "${var.worker_iscsi_volume_mount}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
}

module "instances-k8sworker-ad3" {
  source                      = "./instances/k8sworker"
 // count                       = "${var.k8sWorkerAd3count}"
  api_server_cert_pem         = "${module.k8s-tls.api_server_cert_pem}"
  api_server_private_key_pem  = "${module.k8s-tls.api_server_private_key_pem}"
  availability_domain         = "${lookup(data.oci_identity_availability_domains.ADs.availability_domains[2],"name")}"
  compartment_ocid            = "${var.compartment_ocid}"
  display_name_prefix         = "k8s-worker-ad3"
  docker_ver                  = "${var.docker_ver}"
  worker_docker_max_log_size  = "${var.worker_docker_max_log_size}"
  worker_docker_max_log_files = "${var.worker_docker_max_log_files}"
  domain_name                 = "${var.domain_name}"
  hostname_label_prefix       = "k8s-worker-ad3"
  oracle_linux_image_name     = "${var.worker_ol_image_name}"
  k8s_ver                     = "${var.k8s_ver}"
  label_prefix                = "${var.label_prefix}"
  master_lb                   = "${local.master_lb_address}"
  reverse_proxy_clount_init   = "${local.reverse_proxy_clount_init}"
  reverse_proxy_setup         = "${local.reverse_proxy_setup}"
  region                      = "${var.region}"
  root_ca_key                 = "${module.k8s-tls.root_ca_key}"
  root_ca_pem                 = "${module.k8s-tls.root_ca_pem}"
  shape                       = "${var.k8sWorkerShape}"
  ssh_private_key             = "${module.k8s-tls.ssh_private_key}"
  ssh_public_key_openssh      = "${module.k8s-tls.ssh_public_key_openssh}"
  subnet_id                   = "${module.vcn.k8worker_subnet_ad3_id}"
  tenancy_ocid                = "${var.compartment_ocid}"
  flexvolume_driver_version   = "${var.flexvolume_driver_version}"
  worker_iscsi_volume_create  = "${var.worker_iscsi_volume_create}"
  worker_iscsi_volume_size    = "${var.worker_iscsi_volume_size}"
  worker_iscsi_volume_mount   = "${var.worker_iscsi_volume_mount}"
  flannel_network_cidr        = "${var.flannel_network_cidr}"
}*/

module "kubeconfig" {
  source                     = "./kubernetes/kubeconfig"
  api_server_private_key_pem = "${module.k8s-tls.api_server_private_key_pem}"
  api_server_cert_pem        = "${module.k8s-tls.api_server_cert_pem}"
  k8s_master                 = "${var.master_oci_lb_enabled == "true" ? local.master_lb_address : format("https://%s:%s", element(coalescelist(module.instances-k8smaster-ad1.public_ips, module.instances-k8smaster-ad2.public_ips, module.instances-k8smaster-ad3.public_ips), 0), "443")}"
}
